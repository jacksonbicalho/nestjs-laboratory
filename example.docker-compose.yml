version: "3"

services:
  app:
    env_file:
    - .env
    build:
      context: .
      dockerfile: ./Dockerfile
      target: ${NODE_ENV}
      args:
        - DOCKER_USER_UID=${DOCKER_USER_UID}
        - NODE_ENV=${NODE_ENV}
        - DOCKER_HOST_PORT=${DOCKER_HOST_PORT}
        - SERVER_PORT=${SERVER_PORT}
        - DOCKER_WORK_DIR=${DOCKER_WORK_DIR}
    container_name: docker-nestjs-base-${NODE_ENV}
    image: ${DOCKER_IMAGE_NAME}-${NODE_ENV}:${DOCKER_IMAGE_TAG}

    volumes:
      - ./:${DOCKER_WORK_DIR}

    ports:
      - ${DOCKER_HOST_PORT}:${SERVER_PORT}
    networks:
      nestjs_laboratory_network:
        ipv4_address: 11.11.1.3

  mysql:
    env_file:
    - .env
    image: mysql:5.7
    container_name: mysql-nestjs-laboratory
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=dev
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - type: volume
        source: mysql-data
        target:
          /var/lib/mysql
    networks:
      nestjs_laboratory_network:
        ipv4_address: 11.11.1.2


volumes:
  mysql-data:
    name: mysql-data
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '../volumes/mysql'


networks:
  nestjs_laboratory_network:
    driver: bridge
    name: nestjs_laboratory_network
    ipam:
      config:
        - subnet: 11.11.1.0/24
          gateway: 11.11.1.1
